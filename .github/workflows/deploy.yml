name: Deploy Containers

on:
  push:
    tags:
      - 'v*'

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          docker build -t vizigr0u/anavlad-frontend:${ github.ref_name } .

      - name: Build Backend
        working-directory: ./backend
        run: |
          docker build -t vizigr0u/anavlad-backend:${ github.ref_name } .

      - name: Create Docker network
        run: |
          docker network create app-network || true

      - name: Start backend container
        run: |
          docker run -d --name backend-test \
            --network app-network --network-alias backend \
            -e SESSION_SECRET=github-docker-ci-secret-doesnt-matter \
            -p 5000:5000 \
            vizigr0u/anavlad-backend:${{ github.ref_name }}

      - name: Start frontend container
        run: |
          docker run -d --name frontend-test \
            --network app-network \
            -p 3000:80 \
            vizigr0u/anavlad-frontend:${{ github.ref_name }}

      - name: Wait for services to initialize
        run: sleep 10

      - name: Test backend health endpoint
        run: curl --retry 3 --retry-delay 5 --fail http://localhost:5000/api/health

      - name: Test frontend endpoint
        run: curl --retry 3 --retry-delay 5 --fail http://localhost:3000

      - name: Clean up containers
        run: |
          docker stop backend-test frontend-test
          docker rm backend-test frontend-test

      - name: Push Docker Images
        run: |
          docker push vizigr0u/anavlad-backend:${ github.ref_name }
          docker push vizigr0u/anavlad-frontend:${ github.ref_name }
